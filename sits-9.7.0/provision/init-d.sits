#!/bin/bash
#
# Init file for Urouter Service
#
# chkconfig: 3 55 25
# processname: uroutpr
# description: Uniface router
#

# Source function library.
. /etc/init.d/functions

##################################################################
##################### Define parameters here #####################
##################################################################
# Path to SITS environment and source it
SITSENV=/u01/siapp/vision/prod/adm/sitsenv
. $SITSENV

# Program name (same as description above - line 6)
prog="uroutpr"

# Process name
base=UROUTER

# Location of PID file
PIDFILE=$USYSADM/$prog.pid

# Location of lock file
LOCKFILE=/var/lock/subsys/$prog

# Startup script
STARTUP=$USYSADM/startup.sh

# Shutdown script
SHUTDOWN=$USYSADM/shutdown.sh

# Define grep pattern to catch (usually the process name)
PATTERN=$base

##################################################################
####### Should require no further changes beyond this line #######
##################################################################

# Check for number of urouter process occurance for $RUN_AS_USER
PROC_COUNT=`ps -C urouter -o user:$USERID -o pid,comm | grep -i -w $RUN_AS_USER | wc -l`

# Get PID of urouter process
pid=(`ps -C urouter -o user:$USERID -o pid | grep -i -w $RUN_AS_USER| awk '{print $2}'`)

RETVAL=0

start() {
	# Check if we are running the process as the correct user
	if [ "x$USER" != "x$RUN_AS_USER" ]; then
		daemon --user $RUN_AS_USER $STARTUP
	else
		daemon $STARTUP -d $OPTIONS 
	fi
	RETVAL=$?
	CURR_USER=`whoami`
	if [ "x$CURR_USER" == "xroot" ]; then
		[ $RETVAL -eq 0 ] && touch $LOCKFILE
	fi
	echo
}

stop() {
	# Check if we are running the process as the correct user
	if [ "x$USER" != "x$RUN_AS_USER" ]; then
		su - $RUN_AS_USER -c "$SHUTDOWN"
	else
		$SHUTDOWN
	fi
	RETVAL=$?
	[ $RETVAL -eq 0 ] && success || failure
	echo
	CURR_USER=`whoami`
		if [ "x$CURR_USER" == "xroot" ]; then
			[ $RETVAL -eq 0 ] && rm -f $LOCKFILE
		fi
	return $RETVAL
}

status() {
	if [ $PROC_COUNT -gt 0 ]; then  
		$SETCOLOR_SUCCESS
		echo "$base process for $RUN_AS_USER (pid $pid) is running:" 
		$SETCOLOR_NORMAL
		ps -C urouter -o user:$USERID -o pid,command | grep -i $PATTERN | grep -i -w $RUN_AS_USER  | awk -F= '{str="";if ( length($2) > 25 ) str="...";print $1 substr($2,0,25)str}'
		echo
		return 0
	else  
		if [ -f $PIDFILE ]; then
			$SETCOLOR_FAILURE
			echo "$base process for $RUN_AS_USER is not running but pid file ($PIDFILE) exists."
			$SETCOLOR_NORMAL
			echo
			return 1
		fi
		if [ -f $LOCKFILE ]; then
			$SETCOLOR_FAILURE
			echo "$base process for $RUN_AS_USER is not running but subsys ($LOCKFILE) is locked."
			$SETCOLOR_NORMAL
			echo
			return 2
		else
			$SETCOLOR_FAILURE
			echo "$base process for $RUN_AS_USER is not running." 
			$SETCOLOR_NORMAL
			echo
			return 3
		fi
	fi  

	$SETCOLOR_FAILURE
	echo "$base process for $RUN_AS_USER is not running." 
	$SETCOLOR_NORMAL
	echo
	return 3
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		RETVAL=$?
		;;
	condrestart)
		[ -e $LOCKFILE ] && stop && start
		RETVAL=$?
		;;
	status)
		status
		RETVAL=$?
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|condrestart|status}"
		RETVAL=1
esac

exit $RETVAL


